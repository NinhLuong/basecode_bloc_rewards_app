// Mocks generated by Mockito 5.4.6 from annotations
// in magic_rewards/test/unit_test/features/auth/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:magic_rewards/core/data/datasources/local/cache/cache_storage_services.dart'
    as _i9;
import 'package:magic_rewards/features/auth/data/data_source/auth_data_source.dart'
    as _i4;
import 'package:magic_rewards/features/auth/data/models/check_email_model.dart'
    as _i3;
import 'package:magic_rewards/features/auth/data/models/user_model.dart' as _i2;
import 'package:magic_rewards/features/auth/domain/parameters/check_email_parameters.dart'
    as _i8;
import 'package:magic_rewards/features/auth/domain/parameters/login_parameters.dart'
    as _i6;
import 'package:magic_rewards/features/auth/domain/parameters/register_parameters.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCheckEmailModel_1 extends _i1.SmartFake
    implements _i3.CheckEmailModel {
  _FakeCheckEmailModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDataSource extends _i1.Mock implements _i4.AuthDataSource {
  MockAuthDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserModel> login(_i6.LoginParameters? parameters) =>
      (super.noSuchMethod(
            Invocation.method(#login, [parameters]),
            returnValue: _i5.Future<_i2.UserModel>.value(
              _FakeUserModel_0(this, Invocation.method(#login, [parameters])),
            ),
          )
          as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i2.UserModel> register(_i7.RegisterParameters? parameters) =>
      (super.noSuchMethod(
            Invocation.method(#register, [parameters]),
            returnValue: _i5.Future<_i2.UserModel>.value(
              _FakeUserModel_0(
                this,
                Invocation.method(#register, [parameters]),
              ),
            ),
          )
          as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i3.CheckEmailModel> checkEmail(
    _i8.CheckEmailParameters? parameters,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkEmail, [parameters]),
            returnValue: _i5.Future<_i3.CheckEmailModel>.value(
              _FakeCheckEmailModel_1(
                this,
                Invocation.method(#checkEmail, [parameters]),
              ),
            ),
          )
          as _i5.Future<_i3.CheckEmailModel>);
}

/// A class which mocks [CacheStorageServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheStorageServices extends _i1.Mock
    implements _i9.CacheStorageServices {
  MockCacheStorageServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasToken =>
      (super.noSuchMethod(Invocation.getter(#hasToken), returnValue: false)
          as bool);

  @override
  String get token =>
      (super.noSuchMethod(
            Invocation.getter(#token),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#token),
            ),
          )
          as String);

  @override
  int get avatar =>
      (super.noSuchMethod(Invocation.getter(#avatar), returnValue: 0) as int);

  @override
  String get username =>
      (super.noSuchMethod(
            Invocation.getter(#username),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#username),
            ),
          )
          as String);

  @override
  String get accountId =>
      (super.noSuchMethod(
            Invocation.getter(#accountId),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#accountId),
            ),
          )
          as String);

  @override
  String get fullname =>
      (super.noSuchMethod(
            Invocation.getter(#fullname),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#fullname),
            ),
          )
          as String);

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  _i5.Future<void> setToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#setToken, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeToken() =>
      (super.noSuchMethod(
            Invocation.method(#removeToken, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setLocale(String? locale) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [locale]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setAvatar(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#setAvatar, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setUserName(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#setUserName, [username]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeUserName() =>
      (super.noSuchMethod(
            Invocation.method(#removeUserName, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setAccountId(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#setAccountId, [username]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeAccountId() =>
      (super.noSuchMethod(
            Invocation.method(#removeAccountId, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setFullName(String? fullname) =>
      (super.noSuchMethod(
            Invocation.method(#setFullName, [fullname]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeFullName() =>
      (super.noSuchMethod(
            Invocation.method(#removeFullName, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#setEmail, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeEmail() =>
      (super.noSuchMethod(
            Invocation.method(#removeEmail, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
